info:
  app:
    name: 'Newspeak'
    version: '1.0'
    grailsVersion: '6.2.4'

grails:
  mongodb:
    url: mongodb+srv://admin:XCpYPj7qUQgo2Ldn@cluster0.s4ikkos.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    databaseName: newspeak

  views:
    default:
      codec: html
    gsp:
      encoding: UTF-8
      htmlcodec: xml
      codecs:
        expression: html
        scriptlet: html
        taglib: none
        staticparts: none
    converters:
      encoding: UTF-8
  mime:
    disable:
      accept:
        header:
          userAgents:
            - Gecko
            - WebKit
            - Presto
            - Trident
    types:
      all: '*/*'
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      form: application/x-www-form-urlencoded
      html:
        - text/html
        - application/xhtml+xml
      js: text/javascript
      json:
        - application/json
        - text/json
      multipartForm: multipart/form-data
      pdf: application/pdf
      rss: application/rss+xml
      text: text/plain
      hal:
        - application/hal+json
        - application/hal+xml
      xml:
        - text/xml
        - application/xml

  codegen:
    defaultPackage: newspeak
  profile: web

  # Configuración de Spring Security
  plugin:
    springsecurity:
      userLookup:
        userDomainClassName: 'newspeak.User'
        usernamePropertyName: 'username'
        enabledPropertyName: 'enabled'
        passwordPropertyName: 'password'
        authoritiesPropertyName: 'authorities'
        authorityJoinClassName: 'newspeak.UserRole'
      authority:
        className: 'newspeak.Role'
      securityConfigType: "InterceptUrlMap"
      interceptUrlMap:
        - pattern: '/'
          access: ['permitAll']
        - pattern: '/error'
          access: ['permitAll']
        - pattern: '/index'
          access: ['permitAll']
        - pattern: '/login/**'
          access: ['permitAll']
        - pattern: '/j_spring_security_check'
          access: ['permitAll']
        - pattern: '/j_spring_security_logout'
          access: ['permitAll']
        - pattern: '/assets/**'
          access: ['permitAll']
        - pattern: '/**/js/**'
          access: ['permitAll']
        - pattern: '/**/css/**'
          access: ['permitAll']
        - pattern: '/**/images/**'
          access: ['permitAll']
        - pattern: '/**/favicon.ico'
          access: ['permitAll']
        - pattern: '/user/register'
          access: ['permitAll']
        - pattern: '/user/save'
          access: ['permitAll']
        - pattern: '/home/**'
          access: ['ROLE_USER']
        - pattern: '/**'
          access: ['ROLE_USER']
      auth:
        loginFormUrl: '/login/auth'
      failure:
        defaultFailureUrl: '/login/auth?login_error=1'
      logout:
        postOnly: false
        afterLogoutUrl: '/login/auth'
      successHandler:
        defaultTargetUrl: '/home/index'
      password:
        algorithm: 'bcrypt'
      # Parámetros para el formulario de login
      apf:
        filterProcessesUrl: '/j_spring_security_check'
      usernameParameter: 'username'
      passwordParameter: 'password'
      # Activar logging para debug de autenticación
      debug:
        useFilter: true

# Configuración de Logging
logging:
  level:
    org.springframework.security: DEBUG
    grails.plugin.springsecurity: DEBUG
    newspeak: DEBUG
    org.grails.mongodb: DEBUG

# Configuración de Hibernate (desactivado para MongoDB)
hibernate:
  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false

# Configuración de Datastore
environments:
  development:
    dataSource:
      dbCreate: none
    murf:
      api:
        key: "ap2_8248cb30-22b8-4785-9419-7b7298760409"
        endpoint: "https://api.murf.ai/v1/speech/generate"
  test:
    dataSource:
      dbCreate: none
  production:
    dataSource:
      dbCreate: none
    murf:
      api:
        key: "${MURF_API_KEY}"
        endpoint: "https://api.murf.ai/v1/speech/generate"


# Configuración del servidor
server:
  port: 8080


# API key de https://newsapi.org/
newsapi:
  key: "133483cbeb2a4d6793487fe95aa5d807"

